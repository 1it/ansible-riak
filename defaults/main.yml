---
# override this with the location of the package
# options:
#   - URL to package
#   - file path to package (path must be accessible on machine running playbook)
#   - package name
riak_package:       riak

riak_apt_repo_urls:
  - "deb https://packagecloud.io/basho/{% if 'riak-ts' in riak_package %}riak-ts{% else %}riak{% endif %}/{{ ansible_distribution|lower }}/ {{ ansible_distribution_release }} main"
  - "deb-src https://packagecloud.io/basho/{% if 'riak-ts' in riak_package %}riak-ts{% else %}riak{% endif %}/{{ ansible_distribution|lower }}/ {{ ansible_distribution_release }} main"

riak_install_package_cloud: true

riak_enterprise:    false

riak_admin:   '/usr/sbin/riak-admin'

riak_conf_template: riak.conf.j2

riak_node_name:     "riak@{{ ansible_default_ipv4.address }}"

riak_pb_bind_ip:    "{{ ansible_default_ipv4.address }}"
riak_pb_port:       8087

riak_http_bind_ip:  "{{ ansible_default_ipv4.address }}"
riak_http_port:     8098

riak_https_bind_ip: "{{ ansible_default_ipv4.address }}"
riak_https_port:    10011

riak_ring_size:     256
riak_backend:       bitcask
riak_control:       'off'
riak_search:        'off'

riak_leveldb_tiered: 4
riak_leveldb_tiered_path_fast: /var/lib/riak/leveldb/fast
riak_leveldb_tiered_path_slow: /var/lib/riak/leveldb/slow
riak_leveldb_data_root: ./

riak_leveldb_write_buffer_size_min: 30MB
riak_leveldb_write_buffer_size_max: 60MB
riak_leveldb_block_size: 16KB
riak_leveldb_bloomfilter: on

riak_leveldb_max_mem_percent:   70
riak_search_solr_jvm_options:   '-d64 -Xms1g -Xmx1g -XX:+UseStringCache -XX:+UseCompressedOops'

riak_net_speed:     1Gb

riak_anti_entropy: active

riak_security_enabled:  false
riak_install_java:      true
riak_init_system:       system

# Debian
# riak_java_package: default-jre

# RHEL
# riak_java_package: java-1.8.0-openjdk

riak_log_console:       file
riak_log_console_level: info
riak_log_syslog:        'off'
riak_log_syslog_level:  info
riak_log_crash:         'on'

# riak_shell configuration
riak_shell_group: 'riak'
riak_shell_interface: 'ansible_eth0'
riak_shell_conf_template: riak_shell.config.j2
riak_shell_nodes_list: "{% for host in groups[riak_shell_group]|default([]) %}riak@{{ hostvars[host][riak_shell_interface]['ipv4']['address'] }} {% endfor %}"
riak_shell_nodes: "{{ riak_shell_nodes_list.split() }}"

# disc tuning
riak_filesystem:    ext4
riak_mountpoint:    /
riak_mount_options: noatime,barrier=0,errors=remount-ro
riak_partition:     /dev/mapper/VolGroup-lv_root
riak_physical_disks:
  - sda

# options
riak_tune_disks:    false
riak_tune_os:       false
riak_scheduler:     noop


# Create bucket types
#
#riak_bucket_types:
#  - { name: counters, props: '{"props":{"datatype":"counter"}}' }
#  - { name: maps, props: '{"props":{"datatype":"map"}}' }
#  - { name: sets, props: '{"props":{"datatype":"set"}}' }
riak_bucket_types: []

# Create groups
#
#riak_groups:
#  - admins
#  - keysusers
riak_groups: []

# Create users
#
#riak_users:
#  - {user: 'user1', password: '', cert: ''}
#  - {user: 'user2', password: 'somepassword_that_is_more_complex_than_this', cert: ''}
riak_users: []

# Create security sources
#riak_sources:
#  - {user: 'user1', type: 'certificate', cidr: '0.0.0.0/0'}
#  - {user: 'user2', type: 'password', cidr: '0.0.0.0/0'}
#  - {user: 'user3', type: 'trust', cidr: '0.0.0.0/0'}
#  - {user: 'user4', type: 'pam', cidr: '0.0.0.0/0'}
riak_sources: []

# Create permission grants
#
#riak_grants:
#  - {subject: 'all', scope: 'any', permissions: ''}
#  - {subject: 'user', scope: 'mybuckettype', permissions: ''}
#  - {subject: 'group', scope: 'mybuckettype mybucket', permissions: ''}
riak_grants: []
